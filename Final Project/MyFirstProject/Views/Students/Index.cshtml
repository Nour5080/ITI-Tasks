@model MyFirstProject.Helpers.PaginatedList<MyFirstProject.Models.Student>
@using X.PagedList.Mvc.Core
@using X.PagedList
@{
    ViewData["Title"] = "Students";
    var searchValue = ViewBag.SearchString as string;
    var userRoles = ViewBag.UserRoles as List<string> ?? new List<string>();
    var pageNumber = Model.PageIndex;
    var pageSize = 5; // نفس اللي استخدمته في الهيلبر
    var pagedList = new StaticPagedList<MyFirstProject.Models.Student>(
        Model, pageNumber, pageSize, Model.TotalCount); // Model.TotalCount: تحتاج تضيفها في PaginatedList
}

<h2>Students</h2>

<form asp-action="Index" method="get" class="mb-3">
    <div class="input-group">
        <input type="text" name="searchString" class="form-control" placeholder="Search by name or department..."
               value="@searchValue" />
        <button type="submit" class="btn btn-primary">Search</button>
    </div>
</form>

<table class="table table-bordered table-hover text-center">
    <thead class="table-dark">
        <tr>
            <th>Name</th>
            <th>Department</th>
            <th>Grade</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var student in Model)
        {
            <tr>
                <td>@(student.Name ?? "N/A")</td>
                <td>@(student.Department?.Name ?? "N/A")</td>
                <td>@(student.Grade)</td>
                <td>
                    @if (userRoles.Contains("Admin") || userRoles.Contains("HR"))
                    {
                        <a asp-action="Edit" asp-route-id="@student.Id" class="btn btn-warning btn-sm me-1">Edit</a>
                        <a asp-action="Delete" asp-route-id="@student.Id" class="btn btn-danger btn-sm me-1">Delete</a>
                    }
                    <a asp-action="Details" asp-route-id="@student.Id" class="btn btn-info btn-sm text-white">Details</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@if (userRoles.Contains("Admin") || userRoles.Contains("HR"))
{
    <a asp-action="Create" class="btn btn-success mt-3">➕ Add Student</a>
}

<div class="d-flex justify-content-center mt-4">
    @Html.PagedListPager(
    pagedList,
    page => Url.Action("Index", new { pageNumber = page, searchString = searchValue }),
        new PagedListRenderOptions
        {
            Display = PagedListDisplayMode.IfNeeded,
            MaximumPageNumbersToDisplay = 5,
            UlElementClasses = new[] { "pagination" },
            LiElementClasses = new[] { "page-item" },
            PageClasses = new[] { "page-link" }
        })
</div>
