@model X.PagedList.IPagedList<MyFirstProject.Models.CourseStudents>
@using X.PagedList.Mvc.Core

@{
    ViewData["Title"] = "Students & Courses";
    var searchQuery = Context.Request.Query["search"].ToString();
}

<h2 class="mb-4">Students & Their Courses</h2>

<!-- Search -->
<form method="get" asp-action="Index" class="mb-4">
    <div class="input-group">
        <input type="text" name="search" value="@searchQuery" placeholder="Search by student or course" class="form-control" />
        <button type="submit" class="btn btn-primary">Search</button>
    </div>
</form>

<table class="table table-striped table-hover table-bordered align-middle text-center">
    <thead class="table-dark">
        <tr>
            <th style="width: 25%;">Student Name</th>
            <th style="width: 55%;">Courses & Grades</th>
            <th style="width: 20%;">Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var studentGroup in Model.GroupBy(cs => cs.Student?.Id))
        {
            var student = studentGroup.First().Student;
            <tr>
                <td class="fw-bold align-middle">@student?.Name</td>
                <td class="text-start">
                    <ul class="mb-0">
                        @foreach (var cs in studentGroup)
                        {
                            <li class="mb-1">
                                <strong>@cs.Course?.Name</strong> — Grade: @cs.Degree
                            </li>
                        }
                    </ul>
                </td>
                <td class="text-start">
                    <div class="d-flex flex-column gap-2">
                        @foreach (var cs in studentGroup)
                        {
                            <div class="border p-2 rounded bg-light">
                                <strong>@cs.Course?.Name</strong>
                                <div class="mt-1 d-flex flex-wrap gap-1">
                                    <a asp-action="Details" asp-route-id="@cs.Id" class="btn btn-sm btn-info">Details</a>
                                    <a asp-action="Edit" asp-route-id="@cs.Id" class="btn btn-sm btn-warning">Edit</a>
                                    <a asp-action="Delete" asp-route-id="@cs.Id" class="btn btn-sm btn-danger">Delete</a>
                                </div>
                            </div>
                        }
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Pagination -->
<div class="text-center mt-4">
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, search = searchQuery }),
    new PagedListRenderOptions
    {
        Display = PagedListDisplayMode.IfNeeded,
        MaximumPageNumbersToDisplay = 5,
        UlElementClasses = new[] { "pagination", "justify-content-center" },
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link" }
    })
</div>

<a asp-action="Create" class="btn btn-success mt-4">➕ Add New Assignment</a>
